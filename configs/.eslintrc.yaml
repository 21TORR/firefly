parser: '@typescript-eslint/parser'

parserOptions:
    ecmaVersion: 2020
    sourceType: module
    ecmaFeatures:
        jsx: true
        experimentalObjectRestSpread: true
    project: './tsconfig.json'

settings:
    jsdoc:
        mode: typescript
    react:
        createClass: "Component"
        pragma: "h"
        version: "16.3"

env:
    browser: true
    commonjs: true
    es6: true
    jquery: true

plugins:
    - jsdoc
    - react
    - react-hooks
    - '@typescript-eslint'

globals:
    App: true
    Foundation: true
    require: false
    __DEBUG__: true

extends:
    - 'eslint:recommended'
    - 'plugin:@typescript-eslint/eslint-recommended'
    - 'plugin:@typescript-eslint/recommended'
    - 'plugin:react-hooks/recommended'

rules:
    indent:
        - error
        - tab
    linebreak-style:
        - error
        - unix
    semi:
        - error
        - always


    # JSDoc
    'jsdoc/check-alignment': warn
    'jsdoc/check-param-names': error
    'jsdoc/check-syntax': warn
    'jsdoc/check-tag-names':
        - warn
        -   definedTags: ["internal"]
    'jsdoc/check-types': warn
    'jsdoc/newline-after-description': warn
    'jsdoc/require-returns-check': warn
    'jsdoc/valid-types': warn

    # TypeScript
    '@typescript-eslint/explicit-module-boundary-types': off
    '@typescript-eslint/no-explicit-any': off
    '@typescript-eslint/no-non-null-assertion': off

    # React
    'react/button-has-type': error
    'react/jsx-closing-bracket-location': warn
    'react/jsx-closing-tag-location': warn
    'react/jsx-equals-spacing':
        - warn
        - "never"
    'react/jsx-filename-extension':
        - error
        -   extensions: [".jsx", ".tsx"]
    'react/jsx-first-prop-new-line': warn
    'react/jsx-indent':
        - warn
        - tab
    'react/jsx-indent-props':
        - warn
        - tab
    'react/jsx-no-comment-textnodes': warn
    'react/jsx-no-duplicate-props': error
    'react/jsx-no-script-url': warn
    'react/jsx-no-target-blank': warn
    'react/jsx-no-undef': error
    'react/jsx-no-useless-fragment': warn
    'react/jsx-pascal-case': error
    'react/jsx-props-no-multi-spaces': warn
    'react/jsx-wrap-multilines': warn
    'react/no-access-state-in-setstate': error
    'react/no-array-index-key': error
    'react/no-children-prop': warn
    'react/no-danger-with-children': error
    'react/no-did-mount-set-state': error
    'react/no-did-update-set-state': error
    'react/no-direct-mutation-state': error
    'react/no-is-mounted': error
    'react/no-render-return-value': error
    'react/no-string-refs': error
    'react/no-this-in-sfc': error
    'react/no-unescaped-entities': warn
    'react/no-unknown-property':
        - warn
        - ignore: ["class"]
    'react/no-unstable-nested-components': error
    'react/no-will-update-set-state': error
    'react/prefer-es6-class':
        - error
        - always
    'react/prefer-read-only-props': error
    'react/react-in-jsx-scope': error
    'react/require-render-return': warn
    'react/self-closing-comp': warn
    'react/void-dom-elements-no-children': error
    'react/jsx-uses-react': error
    'react/jsx-uses-vars': error
